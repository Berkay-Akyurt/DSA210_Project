import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import spearmanr

# 1) Load data
pkmn = pd.read_csv("data/metadata_pokemon.csv")
moves = pd.read_csv("data/metadata_pokemon_moves.csv")

# 2) Base stats & ratios
stat_cols = ["hp","attack","defense","special_attack","special_defense","speed"]
pkmn["total_stat"]    = pkmn[stat_cols].sum(axis=1)
pkmn["atk_def_ratio"] = pkmn["attack"] / pkmn["defense"]

# 3) avg_type_power enrichment
type_power = (
    moves
    .groupby("type")["power"]
    .mean()
    .reset_index(name="avg_power_by_type")
)
for tcol, out in [("type_1","power_type1"),("type_2","power_type2")]:
    pkmn = (
        pkmn
        .merge(type_power, left_on=tcol, right_on="type", how="left")
        .rename(columns={"avg_power_by_type": out})
        .drop("type", axis=1)
    )
pkmn["avg_type_power"] = (
    pkmn[["power_type1","power_type2"]]
    .mean(axis=1)
    .fillna(pkmn["power_type1"])
)

# 4) phys_power1 enrichment
phys_power = (
    moves[moves["damage_class"]=="Physical"]
    .groupby("type")["power"]
    .mean()
    .reset_index(name="avg_phys_power")
)
pkmn = (
    pkmn
    .merge(phys_power, left_on="type_1", right_on="type", how="left")
    .rename(columns={"avg_phys_power":"phys_power1"})
    .drop("type", axis=1)
)
pkmn["phys_power1"] = pkmn["phys_power1"].fillna(0)

# 5) EDA plots

# 5.1 avg_type_power distribution
print("avg_type_power summary:\n", pkmn["avg_type_power"].describe(), "\n")
plt.figure(figsize=(6,3))
sns.histplot(pkmn["avg_type_power"], kde=True)
plt.title("Distribution of Avg Type-Power")
plt.tight_layout()
plt.show()

# 5.2 Total Stat vs Avg Type-Power
plt.figure(figsize=(6,4))
sns.scatterplot(data=pkmn, x="total_stat", y="avg_type_power", alpha=0.7)
plt.title("Total Stat vs Avg Type-Power")
plt.tight_layout()
plt.show()

# 5.3 Speed vs Avg Type-Power
plt.figure(figsize=(6,4))
sns.scatterplot(data=pkmn, x="speed", y="avg_type_power", alpha=0.7)
plt.title("Speed vs Avg Type-Power")
plt.tight_layout()
plt.show()

# 5.4 Attack vs Avg Physical Move Power
plt.figure(figsize=(6,4))
sns.scatterplot(data=pkmn, x="attack", y="phys_power1", alpha=0.7)
plt.title("Attack Stat vs Avg Physical Move Power (Primary Type)")
plt.tight_layout()
plt.show()

# 5.5 Heatmap: primary vs secondary type counts
pkmn["type_2"] = pkmn["type_2"].fillna("None")
pivot = pkmn.groupby(["type_1","type_2"]).size().unstack(fill_value=0)
plt.figure(figsize=(12,10))
sns.heatmap(pivot, annot=True, fmt="d")
plt.title("Count of Pokémon by Primary vs Secondary Type")
plt.ylabel("Primary Type")
plt.xlabel("Secondary Type")
plt.tight_layout()
plt.show()

# 6) Hypothesis Tests

# H₀₁: total_stat uncorrelated with avg_type_power
rho1, p1 = spearmanr(pkmn["total_stat"], pkmn["avg_type_power"])
print(f"\nH₀₁ Spearman total_stat vs avg_type_power: ρ={rho1:.3f}, p={p1:.3f}")
print("→", "Reject H₀₁" if p1 < 0.05 else "Fail to reject H₀₁")

# H₀₂: speed uncorrelated with avg_type_power
rho2, p2 = spearmanr(pkmn["speed"], pkmn["avg_type_power"])
print(f"\nH₀₂ Spearman speed vs avg_type_power: ρ={rho2:.3f}, p={p2:.3f}")
print("→", "Reject H₀₂" if p2 < 0.05 else "Fail to reject H₀₂")

# H₀₃: attack uncorrelated with phys_power1
rho3, p3 = spearmanr(pkmn["attack"], pkmn["phys_power1"])
print(f"\nH₀₃ Spearman attack vs phys_power1: ρ={rho3:.3f}, p={p3:.3f}")
print("→", "Reject H₀₃" if p3 < 0.05 else "Fail to reject H₀₃")
